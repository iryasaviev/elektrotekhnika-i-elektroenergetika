//## 2.1 –†–∞—Å—á—ë—Ç –Ω–∞–≥—Ä—É–∑–æ–∫
K—Å=[0.4 0.3 0.45 0.3 0.45 0.4 0.4 0.45 0.45 0.55 0.45 0.8 0.8 0.8]
P—É—Å—Ç=[100.86 78.45 61.2 89 62 101.26 47.6 16 96 215 65.7 147.68 12.23 13.5]
P—É—Å—Ç–æ—Å–≤=[06.38 12.35 13 7.4 12.5 15.6 10 2.5 8.2 14.7 8.95 4.2 0.95 0]
CosœÜ=[0.95 0.95 0.95 0.95 0.95 0.95 0.95 0.95 0.95 0.98 0.95 0.75 0.65 0.65]

nums=[]
P—Ä=[]
P—ÄSum=0
Q—Ä=[]
Q—ÄSum=0
P—Ä–æ=[]
P—Ä–æSum=0
S—Ä=[]
S—ÄSum=0
S—Ä–∏–æ=[]
S—Ä–∏–æSum=0
TgœÜ=[]

prog_x=1;
while (prog_x<=length(K—Å))
    P—Ä(prog_x)=K—Å(prog_x)*P—É—Å—Ç(prog_x);
    P—ÄSum=P—ÄSum+P—Ä(prog_x)

    // $\sqrt(1-CosœÜ(prog_x)^2)/CosœÜ(prog_x)$
    TgœÜ(prog_x)=sqrt(1-CosœÜ(prog_x)^2)/CosœÜ(prog_x)

    Q—Ä(prog_x)=P—Ä(prog_x)*TgœÜ(prog_x)
    Q—ÄSum=Q—ÄSum+Q—Ä(prog_x)

    P—Ä–æ(prog_x)=K—Å(prog_x)*P—É—Å—Ç–æ—Å–≤(prog_x)
    P—Ä–æSum=P—Ä–æSum+P—Ä–æ(prog_x)

    S—Ä(prog_x)=sqrt(P—Ä(prog_x)^2+Q—Ä(prog_x)^2)
    S—ÄSum=S—ÄSum+S—Ä(prog_x)

    S—Ä–∏–æ(prog_x)=sqrt((P—Ä(prog_x)+P—Ä–æ(prog_x))^2+Q—Ä(prog_x)^2)
    S—Ä–∏–æSum=S—Ä–∏–æSum+S—Ä–∏–æ(prog_x)

    nums(prog_x) = prog_x;
    prog_x=prog_x+1;
end;

//format("v", 10)

disp(["‚Ññ" "tgœÜ" "P—Ä" "Q—Ä" "P—Ä–æ" "S—Ä" "S—Ä–∏–æ"],[nums TgœÜ P—Ä Q—Ä P—Ä–æ S—Ä S—Ä–∏–æ])
disp([00 00 P—ÄSum Q—ÄSum P—Ä–æSum S—ÄSum S—Ä–∏–æSum])

// $S=\sqrt((P—ÄSum+P—Ä–æSum)^2+Q—ÄSum^2)$
S=sqrt((P—ÄSum+P—Ä–æSum)^2+Q—ÄSum^2)
S_formula=strcat(["‚àö(" string(P—ÄSum) "+" string(P—Ä–æSum) ")^2+" string(Q—ÄSum) "^2=" string(S)])
disp("–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ 10/0,4 –∫–í–ê:",S_formula)

// $Pm=0.02*S$
Pm=0.02*S
Pm_formula=strcat([string(0.02) "*" string(S) "=" string(Pm)])
disp("–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏ –≤ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞—Ö (–∫–í—Ç):", Pm_formula)

// $Qm=0.1*S$
Qm=0.1*S
Qm_formula=strcat([string(0.1) "*" string(S) "=" string(Qm)])
disp("–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏ (–∫–í–ê—Ä):",Qm_formula)

// 0.95!!! - –ø–æ–Ω—è—Ç—å –æ—Ç–∫—É–¥–∞ –±–µ—Ä—ë—Ç—Å—è (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —É—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–µ—Å–æ–≤–ø–∞–ª–µ–Ω–∏–µ –ø–∏–∫–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞–≥—Ä—É–∑–∫–∏)
k—Ä–º=0.95

// $P—ÄSum1=P—ÄSum*k—Ä–º+P—Ä–æSum+Pm$
P—ÄSum1=P—ÄSum*k—Ä–º+P—Ä–æSum+Pm
P—ÄSum1_formula=strcat([string(P—ÄSum) "*" string(k—Ä–º) "+" string(P—Ä–æSum) "+" string(Pm) "=" string(P—ÄSum1)])
disp("–ê–∫—Ç–∏–≤–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å –Ω–∞ —à–∏–Ω–∞—Ö –ì–ü–ü (–∫–í—Ç):",P—ÄSum1_formula)

// $Q—ÄSum1=Q—ÄSum*k—Ä–º+P—Ä–æSum+Qm$
Q—ÄSum1=Q—ÄSum*k—Ä–º+P—Ä–æSum+Qm
Q—ÄSum1_formula=strcat([string(Q—ÄSum) "*" string(k—Ä–º) "+" string(P—Ä–æSum) "+" string(Qm) "=" string(Q—ÄSum1)])
disp("–†–∞—Å—á–µ—Ç–Ω–∞—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å (–∫–í–ê—Ä):",Q—ÄSum1_formula)

// $k—Ä–º+Q—ÄSum1$
Qm1=k—Ä–º+Q—ÄSum1
Qm1_formula=strcat([string(k—Ä–º) "+" string(Q—ÄSum1) "=" string(Qm1)])
disp("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å (–∫–í–ê—Ä):",Qm1_formula)

// 0.33!!! - –ø–æ–Ω—è—Ç—å –æ—Ç–∫—É–¥–∞ –±–µ—Ä—ë—Ç—Å—è (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–Ω–≥–µ–Ω—Å–∞)
tgùõæh=0.33
TG_FIH=0.33

// $Q—ç=tgùõæh*P—ÄSum1$
Q—ç=tgùõæh*P—ÄSum1
Q—ç_formula=strcat([string(tgùõæh) "*" string(P—ÄSum1) "=" string(Q—ç)])
disp("–ó–∞–¥–∞–Ω–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å –æ—Ç —ç–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º—ã (–∫–í–ê—Ä):",Q—ç_formula)

// $Q–∫—É=Qm1-Q—ç$
Q–∫—É=Qm1-Q—ç
Q–∫—É_formula=strcat([string(Qm1) "-" string(Q—ç) "=" string(Q–∫—É)])
disp("–†–∞—Å—á–µ—Ç–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫–æ–º–ø–Ω—Å–∏—Ä–æ–≤–∞–Ω–∞ –ö–ö–£ (–∫–í–ê—Ä):",Q–∫—É_formula)

// –¢—Ä–µ–±—É–µ–º–∞—è –º–æ—â–Ω–æ—Å—Ç—å –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É—é—â–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å —É—á—ë—Ç–æ–º –Ω–∞–∏–±–æ–ª—å—à–µ–π —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏ Q—ç,
// –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–∞ –∏–∑ —Å–µ—Ç–µ–π —ç–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º—ã. –î–æ–ª–∂–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å—Å—è —É—Å–ª–æ–≤–∏–µ:
// Qp-Qk‚â§Q—ç
// –≥–¥–µ Q—Ä ‚Äì —Ä–∞—Å—á—ë—Ç–Ω–∞—è –ø–æ—Ç—Ä–µ–±–ª—è–µ–º–∞—è –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ–º —Ä–µ–∞–∫—Ç–∏–≤–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å,
// Qk ‚Äì —Ä–µ–∞–∫—Ç–∏–≤–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–∫–æ–º–ø–µ–Ω—Å–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏

// –£–ö–†–õ56-6,3-225-75 –£–ó

Qp1=Q—ÄSum1-Q–∫—É
Qp1_formula=strcat([string(Q—ÄSum1) "-" string(Q–∫—É) "=" string(Qp1)])
disp("–ù–µ–∫–æ–º–ø–µ–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–∞—è —á–∞—Å—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –∫–æ—Ç–æ—Ä–∞—è –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ö–£:",Qp1_formula)

// $Sp1=\sqrt(P—ÄSum1^2+Qp1^2)$
Sp1=sqrt(P—ÄSum1^2+Qp1^2)
Sp1_formula=strcat(["‚àö" string(P—ÄSum1) "^2" "+" string(Qp1) "^2=" string(Sp1)])
disp("–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–æ—â–Ω–æ—Å—Ç–∏:",Sp1_formula)

disp("–ú–æ—â–Ω–æ—Å—Ç–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏ –≤ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞—Ö")
‚àÜPp1=0.02*Sp1
‚àÜPp1_formula=strcat(["‚àÜPp1=" "0.02" "*" string(Sp1) "=" string(‚àÜPp1)])
disp(‚àÜPp1_formula)

‚àÜQp1=0.1*Sp1
‚àÜQp1_formula=strcat(["‚àÜQp1=" "0.1" "*" string(Sp1) "=" string(‚àÜQp1)])
disp(‚àÜQp1_formula)

Sp2=sqrt((P—ÄSum1+‚àÜPp1)^2+(Qp1+‚àÜQp1)^2)
Sp2_formula=strcat(["‚àö" "(" string(P—ÄSum1) "+" string(‚àÜPp1) ")" "^2" "+" "(" string(Qp1) "+" string(‚àÜQp1) ")" "^2" "=" string(Sp2)])
disp("–ü–æ–ª–Ω–∞—è –∏—Ç–æ–≥–æ–≤–∞—è –º–æ—â–Ω–æ—Å—Ç—å –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ 110–∫–í (–∫–í–ê):",Sp2_formula)

//## 2.2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–æ–≤ –ì–ü–ü –Ω–∞ –ø–µ—Ä–µ–≥—Ä—É–∑–∫—É –∏ –∫–∞–±–µ–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π 110–∫–í (–¢–ú-630/6/0,4)
S_TRANSFORMER=630
U_TRANSFORMER=6

// $K–∑.–Ω–æ—Ä–º=Sp/(2*S—Ç)$
K–∑.–Ω–æ—Ä–º=Sp2/(2*S_TRANSFORMER)
K–∑.–Ω–æ—Ä–º_formula=strcat([string(Sp2) "/" "(" string(2) "*" string(S_TRANSFORMER) ")" "=" string(K–∑.–Ω–æ—Ä–º)])
disp("–ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã:",K–∑.–Ω–æ—Ä–º_formula)

// $K–∞–≤–∞—Ä=Sp/S—Ç$
K–∞–≤–∞—Ä=Sp2/S_TRANSFORMER
K–∞–≤–∞—Ä_formula=strcat([string(Sp2) "/" string(S_TRANSFORMER) "=" string(K–∞–≤–∞—Ä)])
disp("–ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞ –≤ –∞–≤–∞—Ä–∏–π–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã:",K–∞–≤–∞—Ä_formula)

Imax=Sp2/(sqrt(3)*U_TRANSFORMER)
Imax_formula=strcat([string(Sp2) "/" "(" "‚àö" string(3) "*" string(U_TRANSFORMER) ")" "=" string(Imax)])
disp("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ç–æ–∫ –ª–∏–Ω–∏–∏ Imax:",Imax_formula)

Ip–Ω=Sp2/(2*sqrt(3)*U_TRANSFORMER)
Ip–Ω_formula=strcat([string(Sp2) "/" "(" string(2) "*" "‚àö" string(3) "*" string(U_TRANSFORMER) ")" "=" string(Ip–Ω)])
disp("Ip–Ω:",Ip–Ω_formula)

I–∞–≤–∞—Ä=Sp2/(sqrt(3)*U_TRANSFORMER)
I–∞–≤–∞—Ä_formula=strcat([string(Sp2) "/" "(" "‚àö" string(3) "*" string(U_TRANSFORMER) ")" "=" string(I–∞–≤–∞—Ä)])
disp("I–∞–≤–∞—Ä:",I–∞–≤–∞—Ä_formula)

// –ü—Ä–µ–¥–µ–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –ø–ª–æ—Ç–Ω—Å—Ç—å —Ç–æ–∫–∞ –ê/–º–º^2
// 3.1 - –∫–∞–±–µ–ª—å —Å —Ä–µ–∑–∏–Ω–æ–≤—ã–º –∏ –ø–ª–∞—Å—Ç–º–∞—Å—Å–æ–≤–æ–π –∏–∑–æ–ª—è—Ü–∏–µ–π —Å –º–µ–¥–Ω—ã–º–∏ –∂–∏–ª–∞–º–∏ (4500—á)
J_–≠–ö=3.1

S—ç–∫=I–∞–≤–∞—Ä/J_–≠–ö
S—ç–∫_formula=strcat([string(I–∞–≤–∞—Ä) "/" string(J_–≠–ö) "=" string(S—ç–∫)])
disp("–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ —Å–µ—á–µ–Ω–∏–µ:",S—ç–∫_formula)

//## 2.3 –í—ã–±–æ—Ä —á–∏—Å–ª–∞, –º–æ—â–Ω–æ—Å—Ç–∏ –∏ —Ç–∏–ø–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –¢–ü 

// –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π. –°—Ç—Ä–æ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ!
// –í –º–æ—ë–º —Å–ª—É—á–∞–µ –º–æ—â–Ω–æ—Å—Ç–∏ –Ω–µ–±–æ–ª—å—à–∏–µ, –ø–æ—ç—Ç–æ–º—É –º–µ–ª–∫–∏–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –≤ –∫–æ–Ω–µ—á–Ω—ã–µ 2 –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –¥–ª—è –¢–ü
disp("–†–∞—Å—á–µ—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π")
Ppsum1=P—Ä(1)+P—Ä(4)+P—Ä(6)+P—Ä(9)+P—Ä(11)+P—Ä(13)+P—Ä(14)
Ppsum1_formula=strcat(["Pp1=" string(P—Ä(1)) "+" string(P—Ä(4)) "+" string(P—Ä(6)) "+" string(P—Ä(9)) "+" string(P—Ä(11)) "+" string(P—Ä(13)) "+" string(P—Ä(14)) "=" string(Ppsum1)])
disp(Ppsum1_formula)

Ppsum2=P—Ä(2)+P—Ä(3)+P—Ä(5)+P—Ä(7)+P—Ä(8)+P—Ä(10)+P—Ä(12)
Ppsum2_formula=strcat(["Pp2=" string(P—Ä(2)) "+" string(P—Ä(3)) "+" string(P—Ä(5)) "+" string(P—Ä(7)) "+" string(P—Ä(8)) "+" string(P—Ä(10)) "+" string(P—Ä(12)) "=" string(Ppsum2)])
disp(Ppsum2_formula)

Qpsum1=Q—Ä(1)+Q—Ä(4)+Q—Ä(6)+Q—Ä(9)+Q—Ä(11)+Q—Ä(13)+Q—Ä(14)
Qpsum1_formula=strcat(["Qp1=" string(Q—Ä(1)) "+" string(Q—Ä(4)) "+" string(Q—Ä(6)) "+" string(Q—Ä(9)) "+" string(Q—Ä(11)) "+" string(Q—Ä(13)) "+" string(Q—Ä(14)) "=" string(Qpsum1)])
disp(Qpsum1_formula)

Qpsum2=Q—Ä(2)+Q—Ä(3)+Q—Ä(5)+Q—Ä(7)+Q—Ä(8)+Q—Ä(10)+Q—Ä(12)
Qpsum2_formula=strcat(["Qp2=" string(Q—Ä(2)) "+" string(Q—Ä(3)) "+" string(Q—Ä(5)) "+" string(Q—Ä(7)) "+" string(Q—Ä(8)) "+" string(Q—Ä(10)) "+" string(Q—Ä(12)) "=" string(Qpsum2)])
disp(Qpsum2_formula)

Spsum1=sqrt(Ppsum1^2+Qpsum1^2)
Spsum1_formula=strcat(["Sp1=" "‚àö" string(Ppsum1) "^2" "+" string(Qpsum1) "^2" "=" string(Spsum1)])
disp(Spsum1_formula)

Spsum2=sqrt(Ppsum2^2+Qpsum2^2)
Spsum2_formula=strcat(["Sp2=" "‚àö" string(Ppsum2) "^2" "+" string(Qpsum2) "^2" "=" string(Spsum2)])
disp(Spsum2_formula)

disp("–ú–æ—â–Ω–æ—Å—Ç—å —Ç—Ä–µ–±—É–µ–º—ã—Ö –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É—é—â–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (–∫–í–ê—Ä)")
tgfi=Qpsum1\Qpsum2
tgfi_formula=strcat(["tgfi" "=" string(Qpsum1) "\" string(Qpsum2)])
disp(tgfi_formula)

Q1–∫—É=Ppsum1*(tgfi-TG_FIH)
Q1–∫—É_formula=strcat(["Q1–∫—É=" string(Ppsum1) "*" "(" string(tgfi) "-" string(TG_FIH) ")" "=" string(Q1–∫—É)])
disp(Q1–∫—É_formula)

Q2–∫—É=Ppsum2*(tgfi-TG_FIH)
Q2–∫—É_formula=strcat(["Q2–∫—É=" string(Ppsum2) "*" "(" string(tgfi) "-" string(TG_FIH) ")" "=" string(Q2–∫—É)])
disp(Q2–∫—É_formula)

// –£–ö–ú 58-0,4-300-50
W_COMPENSATORY=300 // –º–æ—â–Ω–æ—Å—Ç—å –∫–æ–º–ø–µ–Ω—Å–∞—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
W_COMPENSATORY_COUNT=2 // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—ã—Ö –ö–£

Q=Qpsum1-W_COMPENSATORY_COUNT*W_COMPENSATORY
Q_formula=strcat(["Q=" string(Qpsum1) "-" string(W_COMPENSATORY_COUNT*W_COMPENSATORY) "=" string(Q)])
disp("–ú–æ—â–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ö–£ (–∫–í–ê—Ä):",Q_formula)

Sp3=sqrt(Ppsum1^2+Q^2)
Sp3_formula=strcat(["S`p1=" "‚àö" string(Ppsum1) "^2" "+" string(Q) "^2" "=" string(Sp3)])
disp("–ü–æ–ª–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å –¢–ü-1",Sp3_formula)

Sp4=sqrt(Ppsum2^2+Q^2)
Sp4_formula=strcat(["S`p2=" "‚àö" string(Ppsum2) "^2" "+" string(Q) "^2" "=" string(Sp4)])
disp("–ü–æ–ª–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å –¢–ü-2",Sp4_formula)

// –¢–ú–ì-250/6/0,4
S1_TRANSFORMER=250
U1_TRANSFORMER=6
TRANSFORMER_COUNT=2

// $K–∑.–Ω–æ—Ä–º=Sp/(2*S—Ç)$
Knormal=Sp3/(TRANSFORMER_COUNT*S1_TRANSFORMER)
Knormal_formula=strcat([string(Sp3) "/" "(" string(TRANSFORMER_COUNT) "*" string(S1_TRANSFORMER) ")" "=" string(Knormal)])
disp("–ó–∞–≥—Ä—É–∑–∫–∞ –¢–ü-1 –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã:",Knormal_formula)

// $K–∞–≤–∞—Ä=Sp/S–Ω–æ–º*(n-1)$
Kcrash=Sp3/((TRANSFORMER_COUNT*S1_TRANSFORMER)*(TRANSFORMER_COUNT-1))
Kcrash_formula=strcat([string(Sp3) "/" "((" string(TRANSFORMER_COUNT) "*" string(S1_TRANSFORMER) ")" "*" "(" string(TRANSFORMER_COUNT) "-1" ")" "=" string(Kcrash)])
disp("–ó–∞–≥—Ä—É–∑–∫–∞ –¢–ü-1 –≤ –∞–≤–∞—Ä–∏–π–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã:",Kcrash_formula)

// –¢–ú–ì-400/6/0,4
S2_TRANSFORMER=400
U2_TRANSFORMER=6
TRANSFORMER_COUNT1=2

Knormal1=Sp4/(TRANSFORMER_COUNT1*S2_TRANSFORMER)
Knormal1_formula=strcat([string(Sp4) "/" "(" string(TRANSFORMER_COUNT1) "*" string(S2_TRANSFORMER) ")" "=" string(Knormal1)])
disp("–ó–∞–≥—Ä—É–∑–∫–∞ –¢–ü-2 –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã:",Knormal_formula)

// $K–∞–≤–∞—Ä=Sp/S–Ω–æ–º*(n-1)$
Kcrash1=Sp4/((TRANSFORMER_COUNT1*S2_TRANSFORMER)*(TRANSFORMER_COUNT1-1))
Kcrash1_formula=strcat([string(Sp4) "/" "((" string(TRANSFORMER_COUNT1) "*" string(S2_TRANSFORMER) ")" "*" "(" string(TRANSFORMER_COUNT1) "-1" ")" "=" string(Kcrash1)])
disp("–ó–∞–≥—Ä—É–∑–∫–∞ –¢–ü-2 –≤ –∞–≤–∞—Ä–∏–π–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã:",Kcrash1_formula)

//## 2.4 –†–∞—Å—á–µ—Ç –∏ –≤—ã–±–æ—Ä –ª–∏–Ω–∏–π —ç–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è
TRANSFORMERS_CONSTS=[[S1_TRANSFORMER;U1_TRANSFORMER;TRANSFORMER_COUNT] [S2_TRANSFORMER;U2_TRANSFORMER;TRANSFORMER_COUNT1]]
//disp(TRANSFORMERS_CONSTS,length(TRANSFORMERS_CONSTS))

disp("–†–∞–±–æ—á–∏–µ –∏ –∞–≤–∞—Ä–∏–π–Ω—ã–µ —Ç–æ–∫–∏ –¢–ü:")
transformers_data_num=0
transformer_data_num=1
transfromer_num=1

// –í–í–ì 3—Ö50
// –í–í–ì 3—Ö95
cabels_data_num=0
cabel_data_num=1
CABLES=[[1;0.9;1.25;187] [1;0.9;1.25;279]]
while(transfromer_num<=2)
    current_transformers_s=0
    current_transformers_u=0
    current_transformers_count=0

    while(transformers_data_num<=length(TRANSFORMERS_CONSTS))
        transformers_data_num=transformers_data_num+1
        if transformer_data_num==1 then
            current_transformers_s=TRANSFORMERS_CONSTS(transformers_data_num)
        elseif transformer_data_num==2 then
            current_transformers_u=TRANSFORMERS_CONSTS(transformers_data_num)
        elseif transformer_data_num==3 then
            current_transformers_count=TRANSFORMERS_CONSTS(transformers_data_num)
            transformer_data_num=1
            break
        end;
        transformer_data_num=transformer_data_num+1
     end;

    disp(strcat(["–¢–ü-" string(transfromer_num)]))
    Itn1=((current_transformers_count*current_transformers_s)*(current_transformers_count-1))/(2*sqrt(3)*current_transformers_u)
    Itn1_formula=strcat(["I–Ω=" string(((current_transformers_count*current_transformers_s)*(current_transformers_count-1))) "/" "(" string(2) "*" "‚àö" string(3) "*" string(current_transformers_u) ")" "=" string(Itn1)])
    disp(Itn1_formula)

    Itcrash1=((current_transformers_count*current_transformers_s)*(current_transformers_count-1))/(sqrt(3)*current_transformers_u)
    Itcrash1_formula=strcat(["I–∞–≤–∞—Ä=" string(((current_transformers_count*current_transformers_s)*(current_transformers_count-1))) "/" "(" "‚àö" string(3) "*" string(current_transformers_u) ")" "=" string(Itcrash1)])
    disp(string(Itcrash1_formula))

    Itcrashmax=(J_–≠–ö*((current_transformers_count*current_transformers_s)*(current_transformers_count-1)))/(sqrt(3)*current_transformers_u)
    Itcrashmax_formula=strcat(["I–∞–≤–∞—Ä.–º–∞–∫—Å=" string(J_–≠–ö) "*" string(((current_transformers_count*current_transformers_s)*(current_transformers_count-1))) "/" "(" "‚àö" string(3) "*" string(current_transformers_u) ")" "=" string(Itcrashmax)])
    disp(string(Itcrashmax_formula))

    // –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ —Å–µ—á–µ–Ω–∏–µ –∫–∞–±–µ–ª—è
    Seconom=Itcrashmax/J_–≠–ö
    Seconom_formula=strcat(["S—ç–∫=" string(Itcrashmax) "/" string(J_–≠–ö) "=" string(Seconom)])
    disp(string(Seconom_formula))

    current_cabel_k1=0
    current_cabel_k2=0
    current_cabel_k3=0
    current_cabel_i=0
    while(cabels_data_num<=length(CABLES))
        cabels_data_num=cabels_data_num+1
        if cabel_data_num==1 then
            current_cabel_k1=CABLES(cabels_data_num)
        elseif cabel_data_num==2 then
            current_cabel_k2=CABLES(cabels_data_num)
        elseif cabel_data_num==3 then
            current_cabel_k3=CABLES(cabels_data_num)
        elseif cabel_data_num==4 then
            current_cabel_i=CABLES(cabels_data_num)
            cabel_data_num=1
            break
        end;
        cabel_data_num=cabel_data_num+1
     end;

    Iadd=current_cabel_k1*current_cabel_k2*current_cabel_k3*current_cabel_i
    disp(strcat(["I–¥.–¥–æ–ø=" string(current_cabel_k1) "*" string(current_cabel_k2) "*" string(current_cabel_k3) "*" string(current_cabel_i) "=" string(Iadd)]))

    transfromer_num=transfromer_num+1
end;



//Itn1=((TRANSFORMER_COUNT1*S2_TRANSFORMER)*(TRANSFORMER_COUNT1-1))/(2*sqrt(3)*U1_TRANSFORMER)
//Itn1_formula=strcat(["I–Ω=" string(((TRANSFORMER_COUNT1*S2_TRANSFORMER)*(TRANSFORMER_COUNT1-1))) "/" string(2) "*" "‚àö" string(3) "*" string(U1_TRANSFORMER) "=" string(Itn1)])
//disp("–í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ç–æ–∫–æ–≤ —Ä–∞–±–æ—á–µ–≥–æ –∏ –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ —Ä–µ–∂–∏–º–æ–≤:",string(Itn1_formula))

//Itcrash1=((TRANSFORMER_COUNT1*S2_TRANSFORMER)*(TRANSFORMER_COUNT1-1))/(sqrt(3)*U1_TRANSFORMER)
//Itcrash1_formula=strcat(["I–∞–≤–∞—Ä=" string(((TRANSFORMER_COUNT1*S2_TRANSFORMER)*(TRANSFORMER_COUNT1-1))) "/" "‚àö" string(3) "*" string(U1_TRANSFORMER) "=" string(Itcrash1)])
//disp(string(Itcrash1_formula))

//Itcrashmax=(J_–≠–ö*(TRANSFORMER_COUNT1*S2_TRANSFORMER)*(TRANSFORMER_COUNT1-1))/(sqrt(3)*U1_TRANSFORMER)
//Itcrashmax_formula=strcat(["I–∞–≤–∞—Ä.–º–∞–∫—Å=" string(J_–≠–ö) "*" string(((TRANSFORMER_COUNT1*S2_TRANSFORMER)*(TRANSFORMER_COUNT1-1))) "/" "‚àö" string(3) "*" string(U1_TRANSFORMER) "=" string(Itcrashmax)])
//disp(string(Itcrashmax_formula))

// –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ —Å–µ—á–µ–Ω–∏–µ –∫–∞–±–µ–ª—è
//Seconom=Itcrashmax/J_–≠–ö
//Seconom_formula=strcat(["S—ç–∫=" string(Itcrashmax) "/" string(J_–≠–ö) "=" string(Seconom)])
//disp("–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ —Å–µ—á–µ–Ω–∏–µ –∫–∞–±–µ–ª—è:",string(Seconom_formula))





